// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class com_baidu_mapapi_search_sug_SuggestionResult extends com_baidu_mapapi_search_core_SearchResult with android_os_Parcelable {
  //region constants
  static const String name__ = 'com.baidu.mapapi.search.sug.SuggestionResult';

  @override
  final String tag__ = 'bmap_map_fluttify';

  
  //endregion

  //region creators
  static Future<com_baidu_mapapi_search_sug_SuggestionResult> create__() async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createcom_baidu_mapapi_search_sug_SuggestionResult__',
    
    );
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_search_sug_SuggestionResult>(__result__);
  }
  
  static Future<com_baidu_mapapi_search_sug_SuggestionResult> create__com_baidu_mapapi_search_core_SearchResult_ERRORNO(com_baidu_mapapi_search_core_SearchResult_ERRORNO var1) async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createcom_baidu_mapapi_search_sug_SuggestionResult__com_baidu_mapapi_search_core_SearchResult_ERRORNO',
      {"var1": var1}
    );
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_search_sug_SuggestionResult>(__result__);
  }
  
  static Future<List<com_baidu_mapapi_search_sug_SuggestionResult>> create_batch__(int length) async {
    assert(true);
    final __result_batch__ = await  kBmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchcom_baidu_mapapi_search_sug_SuggestionResult__',
      {'length': length}
    );
    return __result_batch__
        .map((it) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_search_sug_SuggestionResult>(it))
        .toList();
  }
  
  static Future<List<com_baidu_mapapi_search_sug_SuggestionResult>> create_batch__com_baidu_mapapi_search_core_SearchResult_ERRORNO(List<com_baidu_mapapi_search_core_SearchResult_ERRORNO> var1) async {
    assert(true);
    final __result_batch__ = await  kBmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchcom_baidu_mapapi_search_sug_SuggestionResult__com_baidu_mapapi_search_core_SearchResult_ERRORNO',
      [for (int __i__ = 0; __i__ < var1.length; __i__++) {"var1": var1[__i__]}]
    );
    return __result_batch__
        .map((it) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_search_sug_SuggestionResult>(it))
        .toList();
  }
  
  //endregion

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<List<com_baidu_mapapi_search_sug_SuggestionResult_SuggestionInfo>> getAllSuggestions() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.search.sug.SuggestionResult@$refId::getAllSuggestions([])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.search.sug.SuggestionResult::getAllSuggestions', {"__this__": this});
  
  
    // handle native call
  
  
    return (__result__ as List)?.map((it) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_search_sug_SuggestionResult_SuggestionInfo>(it))?.toList();
  }
  
  
  Future<void> setSuggestionInfo(List<com_baidu_mapapi_search_sug_SuggestionResult_SuggestionInfo> var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.search.sug.SuggestionResult@$refId::setSuggestionInfo([])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.search.sug.SuggestionResult::setSuggestionInfo', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    return __result__;
  }
  
  //endregion

  @override
  String toString() {
    return 'com_baidu_mapapi_search_sug_SuggestionResult{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension com_baidu_mapapi_search_sug_SuggestionResult_Batch on List<com_baidu_mapapi_search_sug_SuggestionResult> {
  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<List<List<com_baidu_mapapi_search_sug_SuggestionResult_SuggestionInfo>>> getAllSuggestions_batch() async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.search.sug.SuggestionResult::getAllSuggestions_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => (__result__ as List)?.map((it) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_search_sug_SuggestionResult_SuggestionInfo>(it))?.toList()).cast<List<com_baidu_mapapi_search_sug_SuggestionResult_SuggestionInfo>>().toList();
  }
  
  
  Future<List<void>> setSuggestionInfo_batch(List<List<com_baidu_mapapi_search_sug_SuggestionResult_SuggestionInfo>> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.search.sug.SuggestionResult::setSuggestionInfo_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => __result__).cast<void>().toList();
  }
  
  //endregion
}