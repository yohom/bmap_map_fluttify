// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

/* abstract */ class com_baidu_mapapi_cloud_BaseSearchInfo extends java_lang_Object  {
  //region constants
  static const String name__ = 'com.baidu.mapapi.cloud.BaseSearchInfo';

  
  //endregion

  //region creators
  
  //endregion

  //region getters
  Future<String> get_ak() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("com.baidu.mapapi.cloud.BaseSearchInfo::get_ak", {'refId': refId});
  
    return __result__;
  }
  
  Future<int> get_geoTableId() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("com.baidu.mapapi.cloud.BaseSearchInfo::get_geoTableId", {'refId': refId});
  
    return __result__;
  }
  
  Future<String> get_sn() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("com.baidu.mapapi.cloud.BaseSearchInfo::get_sn", {'refId': refId});
  
    return __result__;
  }
  
  //endregion

  //region setters
  Future<void> set_ak(String ak) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.cloud.BaseSearchInfo::set_ak', {'refId': refId, "ak": ak});
  
  
  }
  
  Future<void> set_geoTableId(int geoTableId) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.cloud.BaseSearchInfo::set_geoTableId', {'refId': refId, "geoTableId": geoTableId});
  
  
  }
  
  Future<void> set_sn(String sn) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.cloud.BaseSearchInfo::set_sn', {'refId': refId, "sn": sn});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}

extension com_baidu_mapapi_cloud_BaseSearchInfo_Batch on List<com_baidu_mapapi_cloud_BaseSearchInfo> {
  //region getters
  Future<List<String>> get_ak_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("com.baidu.mapapi.cloud.BaseSearchInfo::get_ak_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_geoTableId_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("com.baidu.mapapi.cloud.BaseSearchInfo::get_geoTableId_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_sn_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("com.baidu.mapapi.cloud.BaseSearchInfo::get_sn_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  //endregion

  //region setters
  Future<void> set_ak_batch(List<String> ak) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.cloud.BaseSearchInfo::set_ak_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "ak": ak[__i__]}]);
  
  
  }
  
  Future<void> set_geoTableId_batch(List<int> geoTableId) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.cloud.BaseSearchInfo::set_geoTableId_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "geoTableId": geoTableId[__i__]}]);
  
  
  }
  
  Future<void> set_sn_batch(List<String> sn) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.mapapi.cloud.BaseSearchInfo::set_sn_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "sn": sn[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}