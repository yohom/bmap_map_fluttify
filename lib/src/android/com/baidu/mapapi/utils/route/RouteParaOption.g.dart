// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class com_baidu_mapapi_utils_route_RouteParaOption extends java_lang_Object  {
  //region constants
  static const String name__ = 'com.baidu.mapapi.utils.route.RouteParaOption';

  @override
  final String tag__ = 'bmap_map_fluttify';

  
  //endregion

  //region creators
  static Future<com_baidu_mapapi_utils_route_RouteParaOption> create__() async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createcom_baidu_mapapi_utils_route_RouteParaOption__',
    
    );
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_utils_route_RouteParaOption>(__result__);
  }
  
  static Future<List<com_baidu_mapapi_utils_route_RouteParaOption>> create_batch__(int length) async {
    assert(true);
    final __result_batch__ = await  kBmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchcom_baidu_mapapi_utils_route_RouteParaOption__',
      {'length': length}
    );
    return __result_batch__
        .map((it) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_utils_route_RouteParaOption>(it))
        .toList();
  }
  
  //endregion

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<com_baidu_mapapi_utils_route_RouteParaOption> startPoint(com_baidu_mapapi_model_LatLng var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.utils.route.RouteParaOption@$refId::startPoint([])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::startPoint', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_utils_route_RouteParaOption>(__result__);
  }
  
  
  Future<com_baidu_mapapi_model_LatLng> getStartPoint() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.utils.route.RouteParaOption@$refId::getStartPoint([])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::getStartPoint', {"__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_model_LatLng>(__result__);
  }
  
  
  Future<com_baidu_mapapi_utils_route_RouteParaOption> endPoint(com_baidu_mapapi_model_LatLng var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.utils.route.RouteParaOption@$refId::endPoint([])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::endPoint', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_utils_route_RouteParaOption>(__result__);
  }
  
  
  Future<com_baidu_mapapi_model_LatLng> getEndPoint() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.utils.route.RouteParaOption@$refId::getEndPoint([])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::getEndPoint', {"__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_model_LatLng>(__result__);
  }
  
  
  Future<com_baidu_mapapi_utils_route_RouteParaOption> startName(String var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.utils.route.RouteParaOption@$refId::startName([\'var1\':$var1])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::startName', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_utils_route_RouteParaOption>(__result__);
  }
  
  
  Future<String> getStartName() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.utils.route.RouteParaOption@$refId::getStartName([])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::getStartName', {"__this__": this});
  
  
    // handle native call
  
  
    return __result__;
  }
  
  
  Future<com_baidu_mapapi_utils_route_RouteParaOption> endName(String var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.utils.route.RouteParaOption@$refId::endName([\'var1\':$var1])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::endName', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_utils_route_RouteParaOption>(__result__);
  }
  
  
  Future<String> getEndName() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.utils.route.RouteParaOption@$refId::getEndName([])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::getEndName', {"__this__": this});
  
  
    // handle native call
  
  
    return __result__;
  }
  
  
  Future<com_baidu_mapapi_utils_route_RouteParaOption> busStrategyType(com_baidu_mapapi_utils_route_RouteParaOption_EBusStrategyType var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.utils.route.RouteParaOption@$refId::busStrategyType([])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::busStrategyType', {"var1": var1.toValue(), "__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_utils_route_RouteParaOption>(__result__);
  }
  
  
  Future<com_baidu_mapapi_utils_route_RouteParaOption_EBusStrategyType> getBusStrategyType() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.utils.route.RouteParaOption@$refId::getBusStrategyType([])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::getBusStrategyType', {"__this__": this});
  
  
    // handle native call
  
  
    return (__result__ as int).tocom_baidu_mapapi_utils_route_RouteParaOption_EBusStrategyType();
  }
  
  
  Future<com_baidu_mapapi_utils_route_RouteParaOption> cityName(String var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.utils.route.RouteParaOption@$refId::cityName([\'var1\':$var1])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::cityName', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_utils_route_RouteParaOption>(__result__);
  }
  
  
  Future<String> getCityName() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.utils.route.RouteParaOption@$refId::getCityName([])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::getCityName', {"__this__": this});
  
  
    // handle native call
  
  
    return __result__;
  }
  
  //endregion

  @override
  String toString() {
    return 'com_baidu_mapapi_utils_route_RouteParaOption{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension com_baidu_mapapi_utils_route_RouteParaOption_Batch on List<com_baidu_mapapi_utils_route_RouteParaOption> {
  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<List<com_baidu_mapapi_utils_route_RouteParaOption>> startPoint_batch(List<com_baidu_mapapi_model_LatLng> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::startPoint_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_utils_route_RouteParaOption>(__result__)).cast<com_baidu_mapapi_utils_route_RouteParaOption>().toList();
  }
  
  
  Future<List<com_baidu_mapapi_model_LatLng>> getStartPoint_batch() async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::getStartPoint_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_model_LatLng>(__result__)).cast<com_baidu_mapapi_model_LatLng>().toList();
  }
  
  
  Future<List<com_baidu_mapapi_utils_route_RouteParaOption>> endPoint_batch(List<com_baidu_mapapi_model_LatLng> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::endPoint_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_utils_route_RouteParaOption>(__result__)).cast<com_baidu_mapapi_utils_route_RouteParaOption>().toList();
  }
  
  
  Future<List<com_baidu_mapapi_model_LatLng>> getEndPoint_batch() async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::getEndPoint_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_model_LatLng>(__result__)).cast<com_baidu_mapapi_model_LatLng>().toList();
  }
  
  
  Future<List<com_baidu_mapapi_utils_route_RouteParaOption>> startName_batch(List<String> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::startName_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_utils_route_RouteParaOption>(__result__)).cast<com_baidu_mapapi_utils_route_RouteParaOption>().toList();
  }
  
  
  Future<List<String>> getStartName_batch() async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::getStartName_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => __result__).cast<String>().toList();
  }
  
  
  Future<List<com_baidu_mapapi_utils_route_RouteParaOption>> endName_batch(List<String> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::endName_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_utils_route_RouteParaOption>(__result__)).cast<com_baidu_mapapi_utils_route_RouteParaOption>().toList();
  }
  
  
  Future<List<String>> getEndName_batch() async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::getEndName_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => __result__).cast<String>().toList();
  }
  
  
  Future<List<com_baidu_mapapi_utils_route_RouteParaOption>> busStrategyType_batch(List<com_baidu_mapapi_utils_route_RouteParaOption_EBusStrategyType> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::busStrategyType_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__].toValue(), "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_utils_route_RouteParaOption>(__result__)).cast<com_baidu_mapapi_utils_route_RouteParaOption>().toList();
  }
  
  
  Future<List<com_baidu_mapapi_utils_route_RouteParaOption_EBusStrategyType>> getBusStrategyType_batch() async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::getBusStrategyType_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => (__result__ as int).tocom_baidu_mapapi_utils_route_RouteParaOption_EBusStrategyType()).cast<com_baidu_mapapi_utils_route_RouteParaOption_EBusStrategyType>().toList();
  }
  
  
  Future<List<com_baidu_mapapi_utils_route_RouteParaOption>> cityName_batch(List<String> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::cityName_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_utils_route_RouteParaOption>(__result__)).cast<com_baidu_mapapi_utils_route_RouteParaOption>().toList();
  }
  
  
  Future<List<String>> getCityName_batch() async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.utils.route.RouteParaOption::getCityName_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => __result__).cast<String>().toList();
  }
  
  //endregion
}