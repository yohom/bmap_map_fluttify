// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class com_baidu_mapapi_map_WeightedLatLng extends java_lang_Object  {
  //region constants
  static const String name__ = 'com.baidu.mapapi.map.WeightedLatLng';

  @override
  final String tag__ = 'bmap_map_fluttify';

  static final double DEFAULT_INTENSITY = 1.0;
  //endregion

  //region creators
  static Future<com_baidu_mapapi_map_WeightedLatLng> create__com_baidu_mapapi_model_LatLng__double(com_baidu_mapapi_model_LatLng var1, double var2) async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createcom_baidu_mapapi_map_WeightedLatLng__com_baidu_mapapi_model_LatLng__double',
      {"var1": var1, "var2": var2}
    );
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_WeightedLatLng>(__result__);
  }
  
  static Future<com_baidu_mapapi_map_WeightedLatLng> create__com_baidu_mapapi_model_LatLng(com_baidu_mapapi_model_LatLng var1) async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createcom_baidu_mapapi_map_WeightedLatLng__com_baidu_mapapi_model_LatLng',
      {"var1": var1}
    );
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_WeightedLatLng>(__result__);
  }
  
  static Future<List<com_baidu_mapapi_map_WeightedLatLng>> create_batch__com_baidu_mapapi_model_LatLng__double(List<com_baidu_mapapi_model_LatLng> var1, List<double> var2) async {
    assert(var1.length == var2.length);
    final __result_batch__ = await  kBmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchcom_baidu_mapapi_map_WeightedLatLng__com_baidu_mapapi_model_LatLng__double',
      [for (int __i__ = 0; __i__ < var1.length; __i__++) {"var1": var1[__i__], "var2": var2[__i__]}]
    );
    return __result_batch__
        .map((it) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_WeightedLatLng>(it))
        .toList();
  }
  
  static Future<List<com_baidu_mapapi_map_WeightedLatLng>> create_batch__com_baidu_mapapi_model_LatLng(List<com_baidu_mapapi_model_LatLng> var1) async {
    assert(true);
    final __result_batch__ = await  kBmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchcom_baidu_mapapi_map_WeightedLatLng__com_baidu_mapapi_model_LatLng',
      [for (int __i__ = 0; __i__ < var1.length; __i__++) {"var1": var1[__i__]}]
    );
    return __result_batch__
        .map((it) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_WeightedLatLng>(it))
        .toList();
  }
  
  //endregion

  //region getters
  Future<double> get_intensity() async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod("com.baidu.mapapi.map.WeightedLatLng::get_intensity", {'__this__': this});
    return __result__;
  }
  
  Future<com_baidu_mapapi_model_LatLng> get_latLng() async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod("com.baidu.mapapi.map.WeightedLatLng::get_latLng", {'__this__': this});
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_model_LatLng>(__result__);
  }
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'com_baidu_mapapi_map_WeightedLatLng{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension com_baidu_mapapi_map_WeightedLatLng_Batch on List<com_baidu_mapapi_map_WeightedLatLng> {
  //region getters
  Future<List<double>> get_intensity_batch() async {
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod("com.baidu.mapapi.map.WeightedLatLng::get_intensity_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List)?.map((__result__) => __result__)?.cast<double>()?.toList();
  }
  
  Future<List<com_baidu_mapapi_model_LatLng>> get_latLng_batch() async {
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod("com.baidu.mapapi.map.WeightedLatLng::get_latLng_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List)?.map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_model_LatLng>(__result__))?.cast<com_baidu_mapapi_model_LatLng>()?.toList();
  }
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  //endregion
}