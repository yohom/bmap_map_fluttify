// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class com_baidu_mapapi_map_MapViewLayoutParams_Builder extends java_lang_Object  {
  //region constants
  static const String name__ = 'com.baidu.mapapi.map.MapViewLayoutParams.Builder';

  @override
  final String tag__ = 'bmap_map_fluttify';

  
  //endregion

  //region creators
  static Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> create__() async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createcom_baidu_mapapi_map_MapViewLayoutParams_Builder__',
    
    );
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(__result__);
  }
  
  static Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> create_batch__(int length) async {
    assert(true);
    final __result_batch__ = await  kBmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchcom_baidu_mapapi_map_MapViewLayoutParams_Builder__',
      {'length': length}
    );
    return __result_batch__
        .map((it) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(it))
        .toList();
  }
  
  //endregion

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<com_baidu_mapapi_map_MapViewLayoutParams> build() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.map.MapViewLayoutParams.Builder@$refId::build([])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::build', {"__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams>(__result__);
  }
  
  
  Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> width(int var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.map.MapViewLayoutParams.Builder@$refId::width([\'var1\':$var1])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::width', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(__result__);
  }
  
  
  Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> height(int var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.map.MapViewLayoutParams.Builder@$refId::height([\'var1\':$var1])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::height', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(__result__);
  }
  
  
  Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> align(int var1, int var2) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.map.MapViewLayoutParams.Builder@$refId::align([\'var1\':$var1, \'var2\':$var2])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::align', {"var1": var1, "var2": var2, "__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(__result__);
  }
  
  
  Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> position(com_baidu_mapapi_model_LatLng var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.map.MapViewLayoutParams.Builder@$refId::position([])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::position', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(__result__);
  }
  
  
  Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> point(android_graphics_Point var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.map.MapViewLayoutParams.Builder@$refId::point([])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::point', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(__result__);
  }
  
  
  Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> layoutMode(com_baidu_mapapi_map_MapViewLayoutParams_ELayoutMode var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.map.MapViewLayoutParams.Builder@$refId::layoutMode([])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::layoutMode', {"var1": var1.toValue(), "__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(__result__);
  }
  
  
  Future<com_baidu_mapapi_map_MapViewLayoutParams_Builder> yOffset(int var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.mapapi.map.MapViewLayoutParams.Builder@$refId::yOffset([\'var1\':$var1])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::yOffset', {"var1": var1, "__this__": this});
  
  
    // handle native call
  
  
    return BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(__result__);
  }
  
  //endregion

  @override
  String toString() {
    return 'com_baidu_mapapi_map_MapViewLayoutParams_Builder{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension com_baidu_mapapi_map_MapViewLayoutParams_Builder_Batch on List<com_baidu_mapapi_map_MapViewLayoutParams_Builder> {
  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<List<com_baidu_mapapi_map_MapViewLayoutParams>> build_batch() async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::build_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams>(__result__)).cast<com_baidu_mapapi_map_MapViewLayoutParams>().toList();
  }
  
  
  Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> width_batch(List<int> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::width_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(__result__)).cast<com_baidu_mapapi_map_MapViewLayoutParams_Builder>().toList();
  }
  
  
  Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> height_batch(List<int> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::height_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(__result__)).cast<com_baidu_mapapi_map_MapViewLayoutParams_Builder>().toList();
  }
  
  
  Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> align_batch(List<int> var1, List<int> var2) async {
    assert(var1.length == var2.length);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::align_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "var2": var2[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(__result__)).cast<com_baidu_mapapi_map_MapViewLayoutParams_Builder>().toList();
  }
  
  
  Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> position_batch(List<com_baidu_mapapi_model_LatLng> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::position_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(__result__)).cast<com_baidu_mapapi_map_MapViewLayoutParams_Builder>().toList();
  }
  
  
  Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> point_batch(List<android_graphics_Point> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::point_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(__result__)).cast<com_baidu_mapapi_map_MapViewLayoutParams_Builder>().toList();
  }
  
  
  Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> layoutMode_batch(List<com_baidu_mapapi_map_MapViewLayoutParams_ELayoutMode> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::layoutMode_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__].toValue(), "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(__result__)).cast<com_baidu_mapapi_map_MapViewLayoutParams_Builder>().toList();
  }
  
  
  Future<List<com_baidu_mapapi_map_MapViewLayoutParams_Builder>> yOffset_batch(List<int> var1) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('com.baidu.mapapi.map.MapViewLayoutParams.Builder::yOffset_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => BmapMapFluttifyAndroidAs<com_baidu_mapapi_map_MapViewLayoutParams_Builder>(__result__)).cast<com_baidu_mapapi_map_MapViewLayoutParams_Builder>().toList();
  }
  
  //endregion
}