// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';



mixin com_baidu_mapapi_map_BaiduMap_OnMapStatusChangeListener on java_lang_Object {
  

  

  

  

  @mustCallSuper
  Future<void> onMapStatusChangeStart__com_baidu_mapapi_map_MapStatus(com_baidu_mapapi_map_MapStatus var1) {
    if (var1 is Ref) kNativeObjectPool.add(var1);
  
    if (fluttifyLogEnabled) {
      debugPrint('onMapStatusChangeStart__com_baidu_mapapi_map_MapStatus::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> onMapStatusChangeStart__com_baidu_mapapi_map_MapStatus__int(com_baidu_mapapi_map_MapStatus var1, int var2) {
    if (var1 is Ref) kNativeObjectPool.add(var1);
  
    if (fluttifyLogEnabled) {
      debugPrint('onMapStatusChangeStart__com_baidu_mapapi_map_MapStatus__int::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> onMapStatusChange(com_baidu_mapapi_map_MapStatus var1) {
    if (var1 is Ref) kNativeObjectPool.add(var1);
  
    if (fluttifyLogEnabled) {
      debugPrint('onMapStatusChange::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
  @mustCallSuper
  Future<void> onMapStatusChangeFinish(com_baidu_mapapi_map_MapStatus var1) {
    if (var1 is Ref) kNativeObjectPool.add(var1);
  
    if (fluttifyLogEnabled) {
      debugPrint('onMapStatusChangeFinish::kNativeObjectPool: $kNativeObjectPool');
    }
  }
  
}

