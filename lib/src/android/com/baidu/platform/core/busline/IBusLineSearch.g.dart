// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class _com_baidu_platform_core_busline_IBusLineSearch_SUB extends java_lang_Object with com_baidu_platform_core_busline_IBusLineSearch {}

mixin com_baidu_platform_core_busline_IBusLineSearch on java_lang_Object {
  

  static com_baidu_platform_core_busline_IBusLineSearch subInstance() => _com_baidu_platform_core_busline_IBusLineSearch_SUB();

  

  

  
  Future<bool> a__com_baidu_mapapi_search_busline_BusLineSearchOption(com_baidu_mapapi_search_busline_BusLineSearchOption var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.platform.core.busline.IBusLineSearch@$refId::a([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.platform.core.busline.IBusLineSearch::a__com_baidu_mapapi_search_busline_BusLineSearchOption', {"var1": var1?.refId, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
    
      return __return__;
    }
  }
  
  
  Future<void> a__com_baidu_mapapi_search_busline_OnGetBusLineSearchResultListener(com_baidu_mapapi_search_busline_OnGetBusLineSearchResultListener var1) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.platform.core.busline.IBusLineSearch@$refId::a([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.platform.core.busline.IBusLineSearch::a__com_baidu_mapapi_search_busline_OnGetBusLineSearchResultListener', {"refId": refId});
  
  
    // handle native call
    MethodChannel('com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener::Callback')
        .setMethodCallHandler((methodCall) async {
          final args = methodCall.arguments as Map;
          switch (methodCall.method) {
            case 'Callback::com.baidu.mapapi.search.busline.OnGetBusLineSearchResultListener::onGetBusLineResult':
              // print log
              if (fluttifyLogEnabled) {
                debugPrint('fluttify-dart-callback: onGetBusLineResult([\'var1\':${args['var1']}])');
              }
        
              // handle the native call
              var1?.onGetBusLineResult(TypeOpBmapMapFluttifyAndroid((args['var1'] as Object))?.as__<com_baidu_mapapi_search_busline_BusLineResult>());
              break;
            default:
              break;
          }
        });
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
    
      return __return__;
    }
  }
  
  
  Future<void> a() async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: com.baidu.platform.core.busline.IBusLineSearch@$refId::a([])');
    }
  
    // invoke native method
    final __result__ = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.platform.core.busline.IBusLineSearch::a', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (__result__ == null) {
      return null;
    } else {
      final __return__ = __result__;
    
      return __return__;
    }
  }
  
}

extension com_baidu_platform_core_busline_IBusLineSearch_Batch on List<com_baidu_platform_core_busline_IBusLineSearch> {
  //region methods
  
  Future<List<bool>> a__com_baidu_mapapi_search_busline_BusLineSearchOption_batch(List<com_baidu_mapapi_search_busline_BusLineSearchOption> var1) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.platform.core.busline.IBusLineSearch::a__com_baidu_mapapi_search_busline_BusLineSearchOption_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"var1": var1[__i__].refId, "refId": this[__i__].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<bool>().map((__result__) => __result__).toList();
    
      return typedResult;
    }
  }
  
  
  Future<List<void>> a_batch() async {
    if (false) {
      return Future.error('all args must have same length!');
    }
  
    // invoke native method
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('com.baidu.platform.core.busline.IBusLineSearch::a_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"refId": this[__i__].refId}]);
  
  
    // convert native result to dart side object
    if (resultBatch == null) {
      return null;
    } else {
      final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
    
      return typedResult;
    }
  }
  
  //endregion
}