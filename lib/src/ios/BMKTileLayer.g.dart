// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_map_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class BMKTileLayer extends NSObject with BMKAnnotation, BMKOverlay {
  //region constants
  static const String name__ = 'BMKTileLayer';

  @override
  final String tag__ = 'bmap_map_fluttify';

  
  //endregion

  //region creators
  static Future<BMKTileLayer> create__({ bool init = true /* ios only */ }) async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createBMKTileLayer',
      {'init': init}
    );
    return BmapMapFluttifyIOSAs<BMKTileLayer>(__result__);
  }
  
  static Future<List<BMKTileLayer>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    assert(true);
    final __result_batch__ = await  kBmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchBMKTileLayer',
      {'length': length, 'init': init}
    );
    return __result_batch__
        .map((it) => BmapMapFluttifyIOSAs<BMKTileLayer>(it))
        .toList();
  }
  
  //endregion

  //region getters
  Future<int> get_minZoom() async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod("BMKTileLayer::get_minZoom", {'__this__': this});
    return __result__;
  }
  
  Future<int> get_maxZoom() async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod("BMKTileLayer::get_maxZoom", {'__this__': this});
    return __result__;
  }
  
  Future<BMKMapRect> get_visibleMapRect() async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod("BMKTileLayer::get_visibleMapRect", {'__this__': this});
    return BmapMapFluttifyIOSAs<BMKMapRect>(__result__);
  }
  
  //endregion

  //region setters
  Future<void> set_minZoom(int minZoom) async {
    await kBmapMapFluttifyChannel.invokeMethod('BMKTileLayer::set_minZoom', <String, dynamic>{'__this__': this, "minZoom": minZoom});
  
  
  }
  
  Future<void> set_maxZoom(int maxZoom) async {
    await kBmapMapFluttifyChannel.invokeMethod('BMKTileLayer::set_maxZoom', <String, dynamic>{'__this__': this, "maxZoom": maxZoom});
  
  
  }
  
  Future<void> set_visibleMapRect(BMKMapRect visibleMapRect) async {
    await kBmapMapFluttifyChannel.invokeMethod('BMKTileLayer::set_visibleMapRect', <String, dynamic>{'__this__': this, "visibleMapRect": visibleMapRect});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'BMKTileLayer{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension BMKTileLayer_Batch on List<BMKTileLayer> {
  //region getters
  Future<List<int>> get_minZoom_batch() async {
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod("BMKTileLayer::get_minZoom_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List)?.map((__result__) => __result__)?.cast<int>()?.toList();
  }
  
  Future<List<int>> get_maxZoom_batch() async {
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod("BMKTileLayer::get_maxZoom_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List)?.map((__result__) => __result__)?.cast<int>()?.toList();
  }
  
  Future<List<BMKMapRect>> get_visibleMapRect_batch() async {
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod("BMKTileLayer::get_visibleMapRect_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List)?.map((__result__) => BmapMapFluttifyIOSAs<BMKMapRect>(__result__))?.cast<BMKMapRect>()?.toList();
  }
  
  //endregion

  //region setters
  Future<void> set_minZoom_batch(List<int> minZoom) async {
    await kBmapMapFluttifyChannel.invokeMethod('BMKTileLayer::set_minZoom_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "minZoom": minZoom[__i__]}]);
  
  
  }
  
  Future<void> set_maxZoom_batch(List<int> maxZoom) async {
    await kBmapMapFluttifyChannel.invokeMethod('BMKTileLayer::set_maxZoom_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "maxZoom": maxZoom[__i__]}]);
  
  
  }
  
  Future<void> set_visibleMapRect_batch(List<BMKMapRect> visibleMapRect) async {
    await kBmapMapFluttifyChannel.invokeMethod('BMKTileLayer::set_visibleMapRect_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "visibleMapRect": visibleMapRect[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}