// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:io';

import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';
import 'package:bmap_map_fluttify/src/ios/ios.export.g.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
extension TypeOpBmapMapFluttifyIOS on Object {
  // type check
  Future<bool> is__<T>() async {
    final typeName = T.toString();
    if (RegExp(r'^(List<)?(String|int|double)(>)?|(Map<String,(String|int|double)>)$').hasMatch(typeName)) {
      return this is T;
    }
    else if (T == BMKActionPaopaoView) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKActionPaopaoView', {'__this__': this});
      return result;
    }
    else if (T == BMKAnnotation) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKAnnotation', {'__this__': this});
      return result;
    }
    else if (T == BMKTileLayerView) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKTileLayerView', {'__this__': this});
      return result;
    }
    else if (T == BMKOverlayPathView) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKOverlayPathView', {'__this__': this});
      return result;
    }
    else if (T == BMKGroundOverlay) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKGroundOverlay', {'__this__': this});
      return result;
    }
    else if (T == BMKPolyline) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKPolyline', {'__this__': this});
      return result;
    }
    else if (T == BMKCircleView) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKCircleView', {'__this__': this});
      return result;
    }
    else if (T == BMKPointAnnotation) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKPointAnnotation', {'__this__': this});
      return result;
    }
    else if (T == BMKGradient) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKGradient', {'__this__': this});
      return result;
    }
    else if (T == BMKArcline) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKArcline', {'__this__': this});
      return result;
    }
    else if (T == BMKMultiPoint) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKMultiPoint', {'__this__': this});
      return result;
    }
    else if (T == BMKBaseIndoorMapInfo) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKBaseIndoorMapInfo', {'__this__': this});
      return result;
    }
    else if (T == BMKTileLayer) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKTileLayer', {'__this__': this});
      return result;
    }
    else if (T == BMKURLTileLayer) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKURLTileLayer', {'__this__': this});
      return result;
    }
    else if (T == BMKSyncTileLayer) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKSyncTileLayer', {'__this__': this});
      return result;
    }
    else if (T == BMKAsyncTileLayer) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKAsyncTileLayer', {'__this__': this});
      return result;
    }
    else if (T == BMKPolylineView) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKPolylineView', {'__this__': this});
      return result;
    }
    else if (T == BMKPinAnnotationView) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKPinAnnotationView', {'__this__': this});
      return result;
    }
    else if (T == BMKCircle) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKCircle', {'__this__': this});
      return result;
    }
    else if (T == BMKMapPoi) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKMapPoi', {'__this__': this});
      return result;
    }
    else if (T == BMKMapView) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKMapView', {'__this__': this});
      return result;
    }
    else if (T == BMKLocationViewDisplayParam) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKLocationViewDisplayParam', {'__this__': this});
      return result;
    }
    else if (T == BMKMapStatus) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKMapStatus', {'__this__': this});
      return result;
    }
    else if (T == BMKArclineView) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKArclineView', {'__this__': this});
      return result;
    }
    else if (T == BMKHeatMapNode) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKHeatMapNode', {'__this__': this});
      return result;
    }
    else if (T == BMKHeatMap) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKHeatMap', {'__this__': this});
      return result;
    }
    else if (T == BMKPolygon) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKPolygon', {'__this__': this});
      return result;
    }
    else if (T == BMKPolygonView) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKPolygonView', {'__this__': this});
      return result;
    }
    else if (T == BMKOverlayView) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKOverlayView', {'__this__': this});
      return result;
    }
    else if (T == BMKGroundOverlayView) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKGroundOverlayView', {'__this__': this});
      return result;
    }
    else if (T == BMKAnnotationView) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKAnnotationView', {'__this__': this});
      return result;
    }
    else if (T == BMKOverlayGLBasicView) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKOverlayGLBasicView', {'__this__': this});
      return result;
    }
    else if (T == BMKShape) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKShape', {'__this__': this});
      return result;
    }
    else if (T == BMKOLSearchRecord) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKOLSearchRecord', {'__this__': this});
      return result;
    }
    else if (T == BMKOLUpdateElement) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKOLUpdateElement', {'__this__': this});
      return result;
    }
    else if (T == BMKOverlay) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKOverlay', {'__this__': this});
      return result;
    }
    else if (T == BMKCustomMapStyleOption) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKCustomMapStyleOption', {'__this__': this});
      return result;
    }
    else if (T == BMKOfflineMap) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKOfflineMap', {'__this__': this});
      return result;
    }
    else if (T == BMKLocationReGeocode) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKLocationReGeocode', {'__this__': this});
      return result;
    }
    else if (T == BMKLocationManager) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKLocationManager', {'__this__': this});
      return result;
    }
    else if (T == BMKLocationAuth) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKLocationAuth', {'__this__': this});
      return result;
    }
    else if (T == BMKLocationPoiRegion) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKLocationPoiRegion', {'__this__': this});
      return result;
    }
    else if (T == BMKLocationPoi) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKLocationPoi', {'__this__': this});
      return result;
    }
    else if (T == BMKLocation) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKLocation', {'__this__': this});
      return result;
    }
    else if (T == BMKGeoFenceRegion) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKGeoFenceRegion', {'__this__': this});
      return result;
    }
    else if (T == BMKGeoFenceCircleRegion) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKGeoFenceCircleRegion', {'__this__': this});
      return result;
    }
    else if (T == BMKGeoFencePolygonRegion) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKGeoFencePolygonRegion', {'__this__': this});
      return result;
    }
    else if (T == BMKGeoFenceManager) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfBMKGeoFenceManager', {'__this__': this});
      return result;
    }
    else if (T == CLLocation) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfCLLocation', {'__this__': this});
      return result;
    }
    else if (T == CLHeading) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfCLHeading', {'__this__': this});
      return result;
    }
    else if (T == CGRect) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfCGRect', {'__this__': this});
      return result;
    }
    else if (T == CGPoint) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfCGPoint', {'__this__': this});
      return result;
    }
    else if (T == CGSize) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfCGSize', {'__this__': this});
      return result;
    }
    else if (T == UIEdgeInsets) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfUIEdgeInsets', {'__this__': this});
      return result;
    }
    else if (T == CLLocationCoordinate2D) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfCLLocationCoordinate2D', {'__this__': this});
      return result;
    }
    else if (T == CLLocationManager) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfCLLocationManager', {'__this__': this});
      return result;
    }
    else if (T == NSError) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfNSError', {'__this__': this});
      return result;
    }
    else if (T == NSCopying) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfNSCopying', {'__this__': this});
      return result;
    }
    else if (T == UIView) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfUIView', {'__this__': this});
      return result;
    }
    else if (T == UIViewController) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfUIViewController', {'__this__': this});
      return result;
    }
    else if (T == UIControl) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfUIControl', {'__this__': this});
      return result;
    }
    else if (T == UIImage) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfUIImage', {'__this__': this});
      return result;
    }
    else if (T == UIColor) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfUIColor', {'__this__': this});
      return result;
    }
    else if (T == NSData) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfNSData', {'__this__': this});
      return result;
    }
    else if (T == NSOperation) {
      final result = await MethodChannel('com.fluttify/bmap_map_fluttify', StandardMethodCodec(FluttifyMessageCodec())).invokeMethod('RefClass::isKindOfNSOperation', {'__this__': this});
      return result;
    }
  }

  // type cast
  T as__<T>() {
    final typeName = T.toString();
    // jsonable 直接造型 返回
    if (RegExp(r'^(List<)?(String|int|double)(>)?|(Map<String,(String|int|double)>)$').hasMatch(typeName)) {
      return this as T;
    }
    // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
    else if (T == BMKActionPaopaoView) {
      return (BMKActionPaopaoView()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKAnnotation) {
      return (BMKAnnotation.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKTileLayerView) {
      return (BMKTileLayerView()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKOverlayPathView) {
      return (BMKOverlayPathView()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKGroundOverlay) {
      return (BMKGroundOverlay()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKPolyline) {
      return (BMKPolyline()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKCircleView) {
      return (BMKCircleView()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKPointAnnotation) {
      return (BMKPointAnnotation()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKGradient) {
      return (BMKGradient()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKArcline) {
      return (BMKArcline()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKMultiPoint) {
      return (BMKMultiPoint()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKBaseIndoorMapInfo) {
      return (BMKBaseIndoorMapInfo()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKTileLayer) {
      return (BMKTileLayer()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKURLTileLayer) {
      return (BMKURLTileLayer()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKSyncTileLayer) {
      return (BMKSyncTileLayer()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKAsyncTileLayer) {
      return (BMKAsyncTileLayer()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKPolylineView) {
      return (BMKPolylineView()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKPinAnnotationView) {
      return (BMKPinAnnotationView()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKCircle) {
      return (BMKCircle()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKMapPoi) {
      return (BMKMapPoi()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKMapView) {
      return (BMKMapView()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKLocationViewDisplayParam) {
      return (BMKLocationViewDisplayParam()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKMapStatus) {
      return (BMKMapStatus()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKArclineView) {
      return (BMKArclineView()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKHeatMapNode) {
      return (BMKHeatMapNode()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKHeatMap) {
      return (BMKHeatMap()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKPolygon) {
      return (BMKPolygon()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKPolygonView) {
      return (BMKPolygonView()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKOverlayView) {
      return (BMKOverlayView()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKGroundOverlayView) {
      return (BMKGroundOverlayView()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKAnnotationView) {
      return (BMKAnnotationView()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKOverlayGLBasicView) {
      return (BMKOverlayGLBasicView()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKShape) {
      return (BMKShape()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKOLSearchRecord) {
      return (BMKOLSearchRecord()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKOLUpdateElement) {
      return (BMKOLUpdateElement()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKOverlay) {
      return (BMKOverlay.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKCustomMapStyleOption) {
      return (BMKCustomMapStyleOption()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKOfflineMap) {
      return (BMKOfflineMap()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKLocationReGeocode) {
      return (BMKLocationReGeocode()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKLocationManager) {
      return (BMKLocationManager()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKLocationAuth) {
      return (BMKLocationAuth()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKLocationPoiRegion) {
      return (BMKLocationPoiRegion()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKLocationPoi) {
      return (BMKLocationPoi()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKLocation) {
      return (BMKLocation()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKGeoFenceRegion) {
      return (BMKGeoFenceRegion()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKGeoFenceCircleRegion) {
      return (BMKGeoFenceCircleRegion()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKGeoFencePolygonRegion) {
      return (BMKGeoFencePolygonRegion()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == BMKGeoFenceManager) {
      return (BMKGeoFenceManager()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == CLLocation) {
      return (CLLocation()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == CLHeading) {
      return (CLHeading()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == CGRect) {
      return (CGRect()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == CGPoint) {
      return (CGPoint()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == CGSize) {
      return (CGSize()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == UIEdgeInsets) {
      return (UIEdgeInsets()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == CLLocationCoordinate2D) {
      return (CLLocationCoordinate2D()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == CLLocationManager) {
      return (CLLocationManager()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == NSError) {
      return (NSError()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == NSCopying) {
      return (NSCopying.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == UIView) {
      return (UIView()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == UIViewController) {
      return (UIViewController()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == UIControl) {
      return (UIControl()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == UIImage) {
      return (UIImage()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == UIColor) {
      return (UIColor()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == NSData) {
      return (NSData()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
    else if (T == NSOperation) {
      return (NSOperation()..refId = (this is Ref ? (this as Ref).refId : this as String)..tag__ = 'bmap_map_fluttify') as T;
    }
  }
}