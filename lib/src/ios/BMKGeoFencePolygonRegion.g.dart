// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_map_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class BMKGeoFencePolygonRegion extends BMKGeoFenceRegion with NSCopying {
  //region constants
  static const String name__ = 'BMKGeoFencePolygonRegion';

  @override
  final String tag__ = 'bmap_map_fluttify';

  
  //endregion

  //region creators
  static Future<BMKGeoFencePolygonRegion> create__({ bool init = true /* ios only */ }) async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createBMKGeoFencePolygonRegion',
      {'init': init}
    );
    return BmapMapFluttifyIOSAs<BMKGeoFencePolygonRegion>(__result__);
  }
  
  static Future<List<BMKGeoFencePolygonRegion>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    assert(true);
    final __result_batch__ = await  kBmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchBMKGeoFencePolygonRegion',
      {'length': length, 'init': init}
    );
    return __result_batch__
        .map((it) => BmapMapFluttifyIOSAs<BMKGeoFencePolygonRegion>(it))
        .toList();
  }
  
  //endregion

  //region getters
  Future<List<CLLocationCoordinate2D>> get_coordinates() async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod("BMKGeoFencePolygonRegion::get_coordinates", {'__this__': this});
    return (__result__ as List)?.map((it) => BmapMapFluttifyIOSAs<CLLocationCoordinate2D>(it))?.toList();
  }
  
  Future<int> get_count() async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod("BMKGeoFencePolygonRegion::get_count", {'__this__': this});
    return __result__;
  }
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<dynamic> initWithCustomID_identityID_coor_count_coor(String customid, String identityid, List<CLLocationCoordinate2D> coor, int count, BMKLocationCoordinateType type) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: BMKGeoFencePolygonRegion@$refId::initWithCustomID([\'customid\':$customid, \'identityid\':$identityid, \'count\':$count])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('BMKGeoFencePolygonRegion::initWithCustomID_identityID_coor_count_coor', {"customid": customid, "identityid": identityid, "coor": coor, "count": count, "type": type.toValue(), "__this__": this});
  
  
    // handle native call
  
  
    return __result__;
  }
  
  //endregion

  @override
  String toString() {
    return 'BMKGeoFencePolygonRegion{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension BMKGeoFencePolygonRegion_Batch on List<BMKGeoFencePolygonRegion> {
  //region getters
  Future<List<List<CLLocationCoordinate2D>>> get_coordinates_batch() async {
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod("BMKGeoFencePolygonRegion::get_coordinates_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List)?.map((__result__) => (__result__ as List)?.map((it) => BmapMapFluttifyIOSAs<CLLocationCoordinate2D>(it))?.toList())?.cast<List<CLLocationCoordinate2D>>()?.toList();
  }
  
  Future<List<int>> get_count_batch() async {
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod("BMKGeoFencePolygonRegion::get_count_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List)?.map((__result__) => __result__)?.cast<int>()?.toList();
  }
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<List<dynamic>> initWithCustomID_identityID_coor_count_coor_batch(List<String> customid, List<String> identityid, List<List<CLLocationCoordinate2D>> coor, List<int> count, List<BMKLocationCoordinateType> type) async {
    assert(customid.length == identityid.length && identityid.length == coor.length && coor.length == count.length && count.length == type.length);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('BMKGeoFencePolygonRegion::initWithCustomID_identityID_coor_count_coor_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"customid": customid[__i__], "identityid": identityid[__i__], "coor": coor[__i__], "count": count[__i__], "type": type[__i__].toValue(), "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => __result__).cast<dynamic>().toList();
  }
  
  //endregion
}