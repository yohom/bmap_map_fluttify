// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_map_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class BMKLocationPoiRegion extends NSObject  {
  //region constants
  static const String name__ = 'BMKLocationPoiRegion';

  @override
  final String tag__ = 'bmap_map_fluttify';

  
  //endregion

  //region creators
  static Future<BMKLocationPoiRegion> create__({ bool init = true /* ios only */ }) async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod(
      'ObjectFactory::createBMKLocationPoiRegion',
      {'init': init}
    );
    return BmapMapFluttifyIOSAs<BMKLocationPoiRegion>(__result__);
  }
  
  static Future<List<BMKLocationPoiRegion>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    assert(true);
    final __result_batch__ = await  kBmapMapFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchBMKLocationPoiRegion',
      {'length': length, 'init': init}
    );
    return __result_batch__
        .map((it) => BmapMapFluttifyIOSAs<BMKLocationPoiRegion>(it))
        .toList();
  }
  
  //endregion

  //region getters
  Future<String> get_directionDesc() async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod("BMKLocationPoiRegion::get_directionDesc", {'__this__': this});
    return __result__;
  }
  
  Future<String> get_name() async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod("BMKLocationPoiRegion::get_name", {'__this__': this});
    return __result__;
  }
  
  Future<String> get_tags() async {
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod("BMKLocationPoiRegion::get_tags", {'__this__': this});
    return __result__;
  }
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<dynamic> initWithDictionary(Map dictionary) async {
    // print log
    if (fluttifyLogEnabled) {
      debugPrint('fluttify-dart: BMKLocationPoiRegion@$refId::initWithDictionary([\'dictionary\':$dictionary])');
    }
  
    // invoke native method
    final __result__ = await kBmapMapFluttifyChannel.invokeMethod('BMKLocationPoiRegion::initWithDictionary', {"dictionary": dictionary, "__this__": this});
  
  
    // handle native call
  
  
    return __result__;
  }
  
  //endregion

  @override
  String toString() {
    return 'BMKLocationPoiRegion{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension BMKLocationPoiRegion_Batch on List<BMKLocationPoiRegion> {
  //region getters
  Future<List<String>> get_directionDesc_batch() async {
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod("BMKLocationPoiRegion::get_directionDesc_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List)?.map((__result__) => __result__)?.cast<String>()?.toList();
  }
  
  Future<List<String>> get_name_batch() async {
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod("BMKLocationPoiRegion::get_name_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List)?.map((__result__) => __result__)?.cast<String>()?.toList();
  }
  
  Future<List<String>> get_tags_batch() async {
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod("BMKLocationPoiRegion::get_tags_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List)?.map((__result__) => __result__)?.cast<String>()?.toList();
  }
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  
  Future<List<dynamic>> initWithDictionary_batch(List<Map> dictionary) async {
    assert(true);
  
    // invoke native method
    final resultBatch = await kBmapMapFluttifyChannel.invokeMethod('BMKLocationPoiRegion::initWithDictionary_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {"dictionary": dictionary[__i__], "__this__": this[__i__]}]);
  
  
    return (resultBatch as List).map((__result__) => __result__).cast<dynamic>().toList();
  }
  
  //endregion
}