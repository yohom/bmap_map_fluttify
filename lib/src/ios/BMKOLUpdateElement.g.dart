// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_map_fluttify/src/ios/ios.export.g.dart';
import 'package:bmap_map_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class BMKOLUpdateElement extends NSObject  {
  //region constants
  static const String name__ = 'BMKOLUpdateElement';

  
  //endregion

  //region creators
  static Future<BMKOLUpdateElement> create__() async {
    final int refId = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('ObjectFactory::createBMKOLUpdateElement');
    final object = BMKOLUpdateElement()..refId = refId..tag__ = 'bmap_map_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  static Future<List<BMKOLUpdateElement>> create_batch__(int length) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
    final List resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('ObjectFactory::create_batchBMKOLUpdateElement', {'length': length});
  
    final List<BMKOLUpdateElement> typedResult = resultBatch.map((result) => BMKOLUpdateElement()..refId = result..tag__ = 'bmap_map_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region getters
  Future<String> get_cityName() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_cityName", {'refId': refId});
  
    return __result__;
  }
  
  Future<int> get_cityID() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_cityID", {'refId': refId});
  
    return __result__;
  }
  
  Future<int> get_size() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_size", {'refId': refId});
  
    return __result__;
  }
  
  Future<int> get_serversize() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_serversize", {'refId': refId});
  
    return __result__;
  }
  
  Future<int> get_ratio() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_ratio", {'refId': refId});
  
    return __result__;
  }
  
  Future<int> get_status() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_status", {'refId': refId});
  
    return __result__;
  }
  
  Future<bool> get_update() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_update", {'refId': refId});
  
    return __result__;
  }
  
  Future<CLLocationCoordinate2D> get_pt() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_pt", {'refId': refId});
    kNativeObjectPool.add(CLLocationCoordinate2D()..refId = __result__..tag__ = 'bmap_map_fluttify');
    return CLLocationCoordinate2D()..refId = __result__..tag__ = 'bmap_map_fluttify';
  }
  
  //endregion

  //region setters
  Future<void> set_cityName(String cityName) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_cityName', {'refId': refId, "cityName": cityName});
  
  
  }
  
  Future<void> set_cityID(int cityID) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_cityID', {'refId': refId, "cityID": cityID});
  
  
  }
  
  Future<void> set_size(int size) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_size', {'refId': refId, "size": size});
  
  
  }
  
  Future<void> set_serversize(int serversize) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_serversize', {'refId': refId, "serversize": serversize});
  
  
  }
  
  Future<void> set_ratio(int ratio) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_ratio', {'refId': refId, "ratio": ratio});
  
  
  }
  
  Future<void> set_status(int status) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_status', {'refId': refId, "status": status});
  
  
  }
  
  Future<void> set_update(bool update) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_update', {'refId': refId, "update": update});
  
  
  }
  
  Future<void> set_pt(CLLocationCoordinate2D pt) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_pt', {'refId': refId, "pt": pt.refId});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}

extension BMKOLUpdateElement_Batch on List<BMKOLUpdateElement> {
  //region getters
  Future<List<String>> get_cityName_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_cityName_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_cityID_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_cityID_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_size_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_size_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_serversize_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_serversize_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_ratio_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_ratio_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_status_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_status_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<bool>> get_update_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_update_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<bool>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<CLLocationCoordinate2D>> get_pt_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod("BMKOLUpdateElement::get_pt_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => CLLocationCoordinate2D()..refId = __result__..tag__ = 'bmap_map_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region setters
  Future<void> set_cityName_batch(List<String> cityName) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_cityName_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "cityName": cityName[__i__]}]);
  
  
  }
  
  Future<void> set_cityID_batch(List<int> cityID) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_cityID_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "cityID": cityID[__i__]}]);
  
  
  }
  
  Future<void> set_size_batch(List<int> size) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_size_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "size": size[__i__]}]);
  
  
  }
  
  Future<void> set_serversize_batch(List<int> serversize) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_serversize_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "serversize": serversize[__i__]}]);
  
  
  }
  
  Future<void> set_ratio_batch(List<int> ratio) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_ratio_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "ratio": ratio[__i__]}]);
  
  
  }
  
  Future<void> set_status_batch(List<int> status) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_status_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "status": status[__i__]}]);
  
  
  }
  
  Future<void> set_update_batch(List<bool> update) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_update_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "update": update[__i__]}]);
  
  
  }
  
  Future<void> set_pt_batch(List<CLLocationCoordinate2D> pt) async {
    await MethodChannel('com.fluttify/bmap_map_fluttify').invokeMethod('BMKOLUpdateElement::set_pt_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "pt": pt[__i__].refId}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}