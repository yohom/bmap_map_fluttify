// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

enum BMKUserTrackingMode {
  BMKUserTrackingModeNone /* 0 */,
  BMKUserTrackingModeHeading /* null */,
  BMKUserTrackingModeFollow /* null */,
  BMKUserTrackingModeFollowWithHeading /* null */
}

extension BMKUserTrackingModeToX on BMKUserTrackingMode {
  int toValue() {
    switch (this) {
      case BMKUserTrackingMode.BMKUserTrackingModeNone: return 0;
      case BMKUserTrackingMode.BMKUserTrackingModeHeading: return BMKUserTrackingMode.BMKUserTrackingModeHeading.index + 0;
      case BMKUserTrackingMode.BMKUserTrackingModeFollow: return BMKUserTrackingMode.BMKUserTrackingModeFollow.index + 0;
      case BMKUserTrackingMode.BMKUserTrackingModeFollowWithHeading: return BMKUserTrackingMode.BMKUserTrackingModeFollowWithHeading.index + 0;
    }
  }
}

extension BMKUserTrackingModeFromX on int {
  BMKUserTrackingMode toBMKUserTrackingMode() {
    switch (this) {
      case 0: return BMKUserTrackingMode.BMKUserTrackingModeNone;
      default: return BMKUserTrackingMode.values[this + 0];
    }
  }
}